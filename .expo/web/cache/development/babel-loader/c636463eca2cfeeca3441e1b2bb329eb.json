{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport * as Location from 'expo-location';\nimport MapView, { Marker } from 'react-native-maps';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Constants, Permissions } from 'expo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Perimiter(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  var _useState5 = useState({\n    latitude: 37.78825,\n    longitude: -122.4324,\n    latitudeDelta: 0.015,\n    longitudeDelta: 0.0121\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      region = _useState6[0],\n      setRegion = _useState6[1];\n\n  var handlePress = function handlePress() {\n    navigation.replace('Dashboard');\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location, latitude, longitude;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setLocation(location);\n              latitude = location.coords.latitude;\n              longitude = location.coords.longitude;\n              setRegion({\n                latitude: latitude,\n                longitude: longitude,\n                latitudeDelta: 0.015,\n                longitudeDelta: 0.0121\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var text1 = 'Waiting..';\n  var text2 = 'Waiting..';\n\n  if (errorMsg) {\n    text1 = errorMsg;\n    text2 = errorMsg;\n  } else if (location) {\n    text1 = JSON.stringify(location.coords.latitude);\n    text2 = JSON.stringify(location.coords.longitude);\n  }\n\n  var sendLoc = function sendLoc() {\n    var latitude = location.coords.latitude;\n    var longitude = location.coords.longitude;\n    console.log(\"Use these variables to send current location(\", latitude, \",\", longitude, \")\");\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Perimiter\"\n    }), \"\\n\", _jsxs(Text, {\n      style: styles.boldText,\n      children: [\"You are Here\", text1]\n    }), \"\\n\", _jsxs(Text, {\n      style: styles.boldText,\n      children: [\"You are Here\", text2]\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handlePress,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Back\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.btLogin1,\n      onPress: sendLoc,\n      children: _jsx(Text, {\n        style: styles.buttonText1,\n        children: \"Send coordinates\"\n      })\n    }), _jsx(MapView, {\n      style: styles.map,\n      region: region,\n      children: _jsx(Marker, {\n        coordinate: {\n          latitude: 37.78825,\n          longitude: -122.4324\n        },\n        title: \"this is a marker\",\n        description: \"this is a marker example\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 50,\n    padding: 16\n  },\n  boldText: {\n    fontSize: 30,\n    color: 'red'\n  },\n  map: {\n    width: Dimensions.get('screen').width,\n    height: Dimensions.get('screen').height * 0.90\n  },\n  btLogin1: {\n    borderWidth: 1.5,\n    borderColor: \"#3675B8\",\n    height: 37,\n    marginHorizontal: 20,\n    backgroundColor: \"#3675B8\",\n    padding: 7,\n    borderRadius: 5,\n    marginTop: 12,\n    marginBottom: 12,\n    width: \"67%\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/hendrik/Documents/mobiledev/mapareacalc/src/Perimiter.js"],"names":["React","useState","useEffect","TouchableOpacity","Location","MapView","Marker","FontAwesome","Constants","Permissions","Perimiter","navigation","location","setLocation","errorMsg","setErrorMsg","latitude","longitude","latitudeDelta","longitudeDelta","region","setRegion","handlePress","replace","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","coords","text1","text2","JSON","stringify","sendLoc","console","log","styles","container","title","boldText","button","buttonText","btLogin1","buttonText1","map","StyleSheet","create","flex","alignItems","justifyContent","marginTop","padding","fontSize","color","width","Dimensions","get","height","borderWidth","borderColor","marginHorizontal","backgroundColor","borderRadius","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport * as Location from 'expo-location';\r\nimport MapView, { Marker } from 'react-native-maps';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { Constants, Permissions } from 'expo';\r\n\r\n\r\n\r\nexport default function Perimiter({navigation}) {\r\n    const [location, setLocation] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [region,setRegion]=useState({\r\n                            latitude: 37.78825,\r\n                            longitude: -122.4324,\r\n                            latitudeDelta: 0.015,\r\n                            longitudeDelta: 0.0121,})\r\n\r\n    const handlePress = () => {\r\n      navigation.replace('Dashboard');\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n      (async () => {\r\n        let { status } = await Location.requestForegroundPermissionsAsync();\r\n        if (status !== 'granted') {\r\n          setErrorMsg('Permission to access location was denied');\r\n          return;\r\n        }\r\n\r\n        let location = await Location.getCurrentPositionAsync({});\r\n        setLocation(location);\r\n\r\n        let latitude= location.coords.latitude\r\n        let longitude=location.coords.longitude\r\n        setRegion({\r\n                  latitude: latitude,\r\n                  longitude: longitude,\r\n                  latitudeDelta: 0.015,\r\n                  longitudeDelta: 0.0121,\r\n                })\r\n\r\n      })();\r\n    }, []);\r\n  \r\n\r\n\r\n    let text1 = 'Waiting..';\r\n    let text2 = 'Waiting..';\r\n    if (errorMsg) {\r\n      text1 = errorMsg;\r\n      text2 = errorMsg;\r\n    } else if (location) {\r\n      text1 = JSON.stringify(location.coords.latitude);\r\n      text2 = JSON.stringify(location.coords.longitude);\r\n    }\r\n\r\n    const sendLoc =() =>{\r\n      let latitude= location.coords.latitude\r\n      let longitude=location.coords.longitude\r\n      console.log(\"Use these variables to send current location(\",latitude, \",\",longitude,\")\")\r\n    }\r\n\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>Perimiter</Text>\r\n        {`\\n`}\r\n        <Text style={styles.boldText}>You are Here{text1}</Text>\r\n        {`\\n`}\r\n        <Text style={styles.boldText}>You are Here{text2}</Text>\r\n\r\n        <TouchableOpacity style={styles.button} onPress={handlePress}>\r\n          <Text style={styles.buttonText}>Back</Text>\r\n        </TouchableOpacity>\r\n    \r\n        <TouchableOpacity style={styles.btLogin1} onPress={sendLoc}>\r\n          <Text style={styles.buttonText1}>Send coordinates</Text>\r\n        </TouchableOpacity>\r\n\r\n        <MapView\r\n          //provider={PROVIDER_GOOGLE} // remove if not using Google Maps\r\n          style={styles.map}\r\n          region={region}         \r\n          >\r\n          <Marker\r\n          coordinate={{latitude: 37.78825, longitude: -122.4324}}\r\n          title=\"this is a marker\"\r\n          description=\"this is a marker example\"\r\n          />\r\n        </MapView>\r\n\r\n      \r\n      </View>\r\n      \r\n    );\r\n    }\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 50,\r\n    padding: 16,\r\n  },\r\n  boldText: {\r\n    fontSize: 30,\r\n    color: 'red',\r\n  },\r\n  map: {\r\n    width: Dimensions.get('screen').width,\r\n    height: Dimensions.get('screen').height * 0.90,\r\n  }, \r\n  btLogin1: {\r\n    borderWidth: 1.5,\r\n    borderColor: \"#3675B8\",\r\n    height: 37,\r\n    marginHorizontal: 20,\r\n    backgroundColor: \"#3675B8\",\r\n    padding: 7,\r\n    borderRadius: 5,\r\n    marginTop: 12,\r\n    marginBottom: 12,\r\n    width: \"67%\",\r\n    alignItems: \"center\",\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}