{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { DataStore } from 'aws-amplify';\nimport { Location } from \"./models\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Header = function Header() {\n  return _jsx(View, {\n    style: styles.headerContainer,\n    children: _jsx(Text, {\n      style: styles.headerTitle,\n      children: \"My Location List\"\n    })\n  });\n};\n\nvar AddLocationModal = function AddLocationModal(_ref) {\n  var modalVisible = _ref.modalVisible,\n      setModalVisible = _ref.setModalVisible;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      location1 = _useState2[0],\n      setLocation1 = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      location2 = _useState4[0],\n      setLocation2 = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      location3 = _useState6[0],\n      setLocation3 = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      location4 = _useState8[0],\n      setLocation4 = _useState8[1];\n\n  function addLocation() {\n    return _regeneratorRuntime.async(function addLocation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(DataStore.save(new Location({\n              location1: location1,\n              location2: location2,\n              location3: location3,\n              location4: location4,\n              isComplete: false\n            })));\n\n          case 2:\n            setModalVisible(false);\n            setLocation1('');\n            setLocation2('');\n            setLocation3('');\n            setLocation4('');\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function closeModal() {\n    setModalVisible(false);\n  }\n\n  return _jsx(Modal, {\n    animationType: \"fade\",\n    onRequestClose: closeModal,\n    transparent: true,\n    visible: modalVisible,\n    children: _jsx(View, {\n      style: styles.modalContainer,\n      children: _jsxs(View, {\n        style: styles.modalInnerContainer,\n        children: [_jsx(Pressable, {\n          onPress: closeModal,\n          style: styles.modalDismissButton,\n          children: _jsx(Text, {\n            style: styles.modalDismissText,\n            children: \"X\"\n          })\n        }), _jsx(TextInput, {\n          onChangeText: setLocation1,\n          placeholder: \"Location1\",\n          style: styles.modalInput\n        }), _jsx(TextInput, {\n          onChangeText: setLocation2,\n          placeholder: \"Location2\",\n          style: styles.modalInput\n        }), _jsx(TextInput, {\n          onChangeText: setLocation3,\n          placeholder: \"Location3\",\n          style: styles.modalInput\n        }), _jsx(TextInput, {\n          onChangeText: setLocation4,\n          placeholder: \"Location4\",\n          style: styles.modalInput\n        }), _jsx(Pressable, {\n          onPress: addLocation,\n          style: styles.buttonContainer,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Save Location\"\n          })\n        })]\n      })\n    })\n  });\n};\n\nvar LocationList = function LocationList() {\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      locations = _useState10[0],\n      setLocations = _useState10[1];\n\n  useEffect(function () {\n    var subscription = DataStore.observeQuery(Location).subscribe(function (snapshot) {\n      var items = snapshot.items,\n          isSynced = snapshot.isSynced;\n      setLocations(items);\n    });\n    return function cleanup() {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  function deleteLocation(item) {\n    return _regeneratorRuntime.async(function deleteLocation$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(DataStore.delete(item));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log('Delete failed: $e');\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  function setComplete(updateValue, location) {\n    return _regeneratorRuntime.async(function setComplete$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(DataStore.save(Location.copyOf(location, function (updated) {\n              updated.isComplete = updateValue;\n            })));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(TouchableOpacity, {\n      onLongPress: function onLongPress() {\n        deleteLocation(item);\n      },\n      onPress: function onPress() {\n        setComplete(!item.isComplete, item);\n      },\n      style: styles.locationContainer,\n      children: [_jsxs(Text, {\n        children: [\"\\n\" + item.location1, \"\\n\" + item.location2, \"\\n\" + item.location3, \"\\n\" + item.location4]\n      }), _jsx(Text, {\n        style: [styles.checkbox, item.isComplete && styles.completedCheckbox],\n        children: item.isComplete ? 'âœ“' : ''\n      })]\n    });\n  };\n\n  return _jsx(FlatList, {\n    data: locations,\n    keyExtractor: function keyExtractor(_ref3) {\n      var id = _ref3.id;\n      return id;\n    },\n    renderItem: renderItem\n  });\n};\n\nexport default function Events(_ref4) {\n  var navigation = _ref4.navigation;\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalVisible = _useState12[0],\n      setModalVisible = _useState12[1];\n\n  var handlePress = function handlePress() {\n    navigation.replace('Dashboard');\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Header, {}), _jsx(LocationList, {}), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        setModalVisible(true);\n      },\n      style: [styles.buttonContainer, styles.floatingButton],\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"+ Add Location\"\n      })\n    }), _jsx(AddLocationModal, {\n      modalVisible: modalVisible,\n      setModalVisible: setModalVisible\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handlePress,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Back\"\n      })\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    width: '100%',\n    backgroundColor: '#FFFFFF',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  headerContainer: {\n    backgroundColor: '#4696ec'\n  },\n  headerTitle: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: '600',\n    paddingVertical: 16,\n    textAlign: 'center'\n  },\n  locationContainer: {\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    borderRadius: 2,\n    elevation: 4,\n    flexDirection: 'row',\n    marginHorizontal: 8,\n    marginVertical: 4,\n    padding: 8,\n    shadowOffset: {\n      height: 1,\n      width: 1\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 2\n  },\n  locationHeading: {\n    fontSize: 20,\n    fontWeight: '600'\n  },\n  checkbox: {\n    borderRadius: 2,\n    borderWidth: 2,\n    fontWeight: '700',\n    height: 20,\n    marginLeft: 'auto',\n    textAlign: 'center',\n    width: 20\n  },\n  completedCheckbox: {\n    backgroundColor: '#000',\n    color: '#fff'\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: '600',\n    padding: 16\n  },\n  buttonContainer: {\n    alignSelf: 'center',\n    backgroundColor: '#4696ec',\n    borderRadius: 99,\n    paddingHorizontal: 8\n  },\n  floatingButton: {\n    elevation: 6,\n    shadowOffset: {\n      height: 4,\n      width: 1\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4\n  },\n  modalContainer: {\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    flex: 1,\n    justifyContent: 'center',\n    padding: 16\n  },\n  modalInnerContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 16,\n    justifyContent: 'center',\n    padding: 16\n  },\n  modalInput: {\n    borderBottomWidth: 1,\n    marginBottom: 16,\n    padding: 8\n  },\n  modalDismissButton: {\n    marginLeft: 'auto'\n  },\n  modalDismissText: {\n    fontSize: 20,\n    fontWeight: '700'\n  }\n});","map":{"version":3,"sources":["C:/Users/hendrik/Documents/mobiledev/mapareacalc/src/MyLocation.js"],"names":["React","useState","useEffect","TouchableOpacity","DataStore","Location","Header","styles","headerContainer","headerTitle","AddLocationModal","modalVisible","setModalVisible","location1","setLocation1","location2","setLocation2","location3","setLocation3","location4","setLocation4","addLocation","save","isComplete","closeModal","modalContainer","modalInnerContainer","modalDismissButton","modalDismissText","modalInput","buttonContainer","buttonText","LocationList","locations","setLocations","subscription","observeQuery","subscribe","snapshot","items","isSynced","cleanup","unsubscribe","deleteLocation","item","delete","console","log","setComplete","updateValue","location","copyOf","updated","renderItem","locationContainer","checkbox","completedCheckbox","id","Events","navigation","handlePress","replace","container","floatingButton","button","StyleSheet","create","height","width","backgroundColor","alignItems","justifyContent","color","fontSize","fontWeight","paddingVertical","textAlign","borderRadius","elevation","flexDirection","marginHorizontal","marginVertical","padding","shadowOffset","shadowOpacity","shadowRadius","locationHeading","borderWidth","marginLeft","alignSelf","paddingHorizontal","flex","borderBottomWidth","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FlatList, Modal, StyleSheet, Text, TextInput, View, Pressable} from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { DataStore } from 'aws-amplify';\r\nimport { Location } from './models';\r\n\r\nconst Header = () => (\r\n  <View style={styles.headerContainer}>\r\n    <Text style={styles.headerTitle}>My Location List</Text>\r\n  </View>\r\n);\r\n\r\nconst AddLocationModal = ({ modalVisible, setModalVisible }) => {\r\n  const [location1, setLocation1] = useState('');\r\n  const [location2, setLocation2] = useState('');\r\n  const [location3, setLocation3] = useState('');\r\n  const [location4, setLocation4] = useState('');\r\n\r\n  async function addLocation() {\r\n    await DataStore.save(new Location({ location1, location2, location3, location4, isComplete: false }));\r\n    setModalVisible(false);\r\n    setLocation1('');\r\n    setLocation2('');\r\n    setLocation3('');\r\n    setLocation4('');\r\n  }\r\n\r\n  function closeModal() {\r\n    setModalVisible(false);\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      animationType=\"fade\"\r\n      onRequestClose={closeModal}\r\n      transparent\r\n      visible={modalVisible}\r\n    >\r\n      <View style={styles.modalContainer}>\r\n        <View style={styles.modalInnerContainer}>\r\n          <Pressable onPress={closeModal} style={styles.modalDismissButton}>\r\n            <Text style={styles.modalDismissText}>X</Text>\r\n          </Pressable>\r\n          <TextInput\r\n            onChangeText={setLocation1}\r\n            placeholder=\"Location1\"\r\n            style={styles.modalInput}\r\n          />\r\n          <TextInput\r\n            onChangeText={setLocation2}\r\n            placeholder=\"Location2\"\r\n            style={styles.modalInput}\r\n          />\r\n            <TextInput\r\n            onChangeText={setLocation3}\r\n            placeholder=\"Location3\"\r\n            style={styles.modalInput}\r\n          />\r\n            <TextInput\r\n            onChangeText={setLocation4}\r\n            placeholder=\"Location4\"\r\n            style={styles.modalInput}\r\n          />\r\n          <Pressable onPress={addLocation} style={styles.buttonContainer}>\r\n            <Text style={styles.buttonText}>Save Location</Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst LocationList = () => {\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    //query the initial todolist and subscribe to data updates\r\n    const subscription = DataStore.observeQuery(Location).subscribe((snapshot) => {\r\n      //isSynced can be used to show a loading spinner when the list is being loaded. \r\n      const { items, isSynced } = snapshot;\r\n      setLocations(items);\r\n    });\r\n\r\n    //unsubscribe to data updates when component is destroyed so that we donâ€™t introduce a memory leak.\r\n    return function cleanup() {\r\n      subscription.unsubscribe();\r\n    }\r\n\r\n  }, []);\r\n\r\n  async function deleteLocation(item) {\r\n    try {\r\n        await DataStore.delete(item);\r\n      } catch (e) {\r\n        console.log('Delete failed: $e');\r\n      }\r\n  }\r\n\r\n  async function setComplete(updateValue, location) {\r\n       //update the location item with updateValue\r\n       await DataStore.save(\r\n        Location.copyOf(location, updated => {\r\n          updated.isComplete = updateValue\r\n        })\r\n      );\r\n  }\r\n\r\n  const renderItem = ({ item }) => (\r\n    <TouchableOpacity\r\n      onLongPress={() => {\r\n        deleteLocation(item);\r\n      }}\r\n      onPress={() => {\r\n        setComplete(!item.isComplete, item);\r\n      }}\r\n      style={styles.locationContainer}\r\n    >\r\n      <Text>\r\n        {`\\n${item.location1}`}\r\n        {`\\n${item.location2}`}\r\n        {`\\n${item.location3}`}\r\n        {`\\n${item.location4}`}\r\n      </Text>\r\n\r\n      <Text\r\n        style={[styles.checkbox, item.isComplete && styles.completedCheckbox]}\r\n      >\r\n        {item.isComplete ? 'âœ“' : ''}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <FlatList\r\n      data={locations}\r\n      keyExtractor={({ id }) => id}\r\n      renderItem={renderItem}\r\n    />\r\n  );\r\n};\r\n\r\nexport default function Events ({ navigation }) {\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const handlePress = () => {\r\n    navigation.replace('Dashboard');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container} >\r\n        <Header />\r\n        <LocationList />\r\n        <TouchableOpacity\r\n            onPress={() => {\r\n            setModalVisible(true);\r\n        }}\r\n        style={[styles.buttonContainer, styles.floatingButton]}\r\n        >\r\n        <Text style={styles.buttonText}>+ Add Location</Text>\r\n        </TouchableOpacity>\r\n        <AddLocationModal\r\n            modalVisible={modalVisible}\r\n            setModalVisible={setModalVisible}\r\n        />\r\n        <TouchableOpacity style={styles.button} onPress={handlePress}>\r\n            <Text style={styles.buttonText}>Back</Text>\r\n        </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\ncontainer: {\r\n    height: '100%',\r\n    width: '100%',\r\n    backgroundColor: '#FFFFFF',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    },\r\n    headerContainer: {\r\n    backgroundColor: '#4696ec',\r\n    //paddingTop: Platform.OS === 'ios' ? 44 : 0,\r\n    },\r\n    headerTitle: {\r\n    color: '#fff',\r\n    fontSize: 20,\r\n    fontWeight: '600',\r\n    paddingVertical: 16,\r\n    textAlign: 'center',\r\n    },\r\n    locationContainer: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n    borderRadius: 2,\r\n    elevation: 4,\r\n    flexDirection: 'row',\r\n    marginHorizontal: 8,\r\n    marginVertical: 4,\r\n    padding: 8,\r\n    shadowOffset: {\r\n    height: 1,\r\n    width: 1,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n    },\r\n     locationHeading: {\r\n    fontSize: 20,\r\n    fontWeight: '600',\r\n    },\r\n    checkbox: {\r\n    borderRadius: 2,\r\n    borderWidth: 2,\r\n    fontWeight: '700',\r\n    height: 20,\r\n    marginLeft: 'auto',\r\n    textAlign: 'center',\r\n    width: 20,\r\n    },\r\n    completedCheckbox: {\r\n    backgroundColor: '#000',\r\n    color: '#fff',\r\n    },\r\n    buttonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n    padding: 16,\r\n    },\r\n    buttonContainer: {\r\n    alignSelf: 'center',\r\n    backgroundColor: '#4696ec',\r\n    borderRadius: 99,\r\n    paddingHorizontal: 8,\r\n    },\r\n    floatingButton: {\r\n    //position: 'absolute',\r\n    //bottom: 44,\r\n    elevation: 6,\r\n    shadowOffset: {\r\n    height: 4,\r\n    width: 1,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 4,\r\n    },\r\n    modalContainer: {\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 16,\r\n  },\r\n  modalInnerContainer: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 16,\r\n    justifyContent: 'center',\r\n    padding: 16,\r\n  },\r\n  modalInput: {\r\n    borderBottomWidth: 1,\r\n    marginBottom: 16,\r\n    padding: 8,\r\n  },\r\n  modalDismissButton: {\r\n    marginLeft: 'auto',\r\n  },\r\n  modalDismissText: {\r\n    fontSize: 20,\r\n    fontWeight: '700',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}