{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport MapView, { PROVIDER_GOOGLE } from 'react-native-maps';\nimport * as defaultLocation from 'expo-location';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Perimiter(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mapRegion = _useState6[0],\n      setMapRegion = _useState6[1];\n\n  var handlePress = function handlePress() {\n    navigation.replace('Dashboard');\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$defaultLocatio, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(defaultLocation.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$defaultLocatio = _context.sent;\n              status = _await$defaultLocatio.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(defaultLocation.getCurrentPositionAsync({\n                accuracy: defaultLocation.Accuracy.Balanced,\n                enableHighAccuracy: true,\n                timeInterval: 5\n              }));\n\n            case 9:\n              location = _context.sent;\n              setLocation(location);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var text1 = 'Waiting..';\n  var text2 = 'Waiting..';\n\n  if (errorMsg) {\n    text1 = errorMsg;\n    text2 = errorMsg;\n  } else if (location) {\n    text1 = JSON.stringify(location.coords.latitude);\n    text2 = JSON.stringify(location.coords.longitude);\n  }\n\n  var sendLoc = function sendLoc() {\n    console.log(\"Use these variables to send current location(\", text1, \",\", text2, \")\");\n  };\n\n  var mapRef = React.createRef();\n\n  var goToMyLocation = function goToMyLocation() {\n    return _regeneratorRuntime.async(function goToMyLocation$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            mapRef.current.animateCamera({\n              center: {\n                \"latitude\": location.coords.latitude,\n                \"longitude\": location.coords.longitude\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Perimiter\"\n    }), _jsxs(Text, {\n      style: styles.boldText,\n      children: [\"You are Here\", text1]\n    }), _jsxs(Text, {\n      style: styles.boldText,\n      children: [\"You are Here\", text2]\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handlePress,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Back\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.btLogin1,\n      onPress: sendLoc,\n      children: _jsx(Text, {\n        style: styles.buttonText1,\n        children: \"Send coordinates\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.btLogin1,\n      onPress: goToMyLocation,\n      children: _jsx(Text, {\n        style: styles.buttonText1,\n        children: \"Center\"\n      })\n    }), _jsx(MapView, {\n      style: styles.map,\n      provider: PROVIDER_GOOGLE,\n      ref: mapRef\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 50,\n    padding: 16\n  },\n  boldText: {\n    fontSize: 30,\n    color: 'red'\n  },\n  mapStyle: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  },\n  map: {\n    width: Dimensions.get('screen').width,\n    height: Dimensions.get('screen').height * 0.60\n  },\n  btLogin1: {\n    borderWidth: 1.5,\n    borderColor: \"#3675B8\",\n    height: 37,\n    marginHorizontal: 20,\n    backgroundColor: \"#3675B8\",\n    padding: 7,\n    borderRadius: 5,\n    marginTop: 12,\n    marginBottom: 12,\n    width: \"67%\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/hendrik/Documents/mobiledev/mapareacalc/src/Perimiter.js"],"names":["React","useState","useEffect","TouchableOpacity","MapView","PROVIDER_GOOGLE","defaultLocation","Perimiter","navigation","location","setLocation","errorMsg","setErrorMsg","mapRegion","setMapRegion","handlePress","replace","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","accuracy","Accuracy","Balanced","enableHighAccuracy","timeInterval","text1","text2","JSON","stringify","coords","latitude","longitude","sendLoc","console","log","mapRef","createRef","goToMyLocation","current","animateCamera","center","styles","container","title","boldText","button","buttonText","btLogin1","buttonText1","map","StyleSheet","create","flex","alignItems","justifyContent","marginTop","padding","fontSize","color","mapStyle","width","Dimensions","get","height","borderWidth","borderColor","marginHorizontal","backgroundColor","borderRadius","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport MapView, { PROVIDER_GOOGLE } from 'react-native-maps';\r\nimport * as defaultLocation from 'expo-location';\r\n\r\nexport default function Perimiter({navigation}) {\r\n  const [location, setLocation] = useState(null);\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n  const [mapRegion, setMapRegion] = useState(null);\r\n\r\n  const handlePress = () => {\r\n    navigation.replace('Dashboard');\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let { status } = await defaultLocation.requestForegroundPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        setErrorMsg('Permission to access location was denied');\r\n        return;\r\n      }\r\n      let location = await defaultLocation.getCurrentPositionAsync({\r\n        accuracy: defaultLocation.Accuracy.Balanced,\r\n        enableHighAccuracy: true,\r\n        timeInterval: 5\r\n      });\r\n      setLocation(location);\r\n      }\r\n    )();\r\n    }, \r\n    []\r\n  );\r\n\r\n  let text1 = 'Waiting..';\r\n  let text2 = 'Waiting..';\r\n  if (errorMsg) {\r\n    text1 = errorMsg;\r\n    text2 = errorMsg;\r\n  } else if (location) {\r\n    text1 = JSON.stringify(location.coords.latitude);\r\n    text2 = JSON.stringify(location.coords.longitude);\r\n  }\r\n\r\n  const sendLoc =() =>{\r\n    console.log(\"Use these variables to send current location(\",text1, \",\",text2,\")\")\r\n  }\r\n\r\n  const mapRef = React.createRef();\r\n\r\n  const goToMyLocation = async () => {\r\n    mapRef.current.animateCamera({center: {\"latitude\":location.coords.latitude, \"longitude\": location.coords.longitude}});\r\n  }\r\n\r\n  return ( \r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Perimiter</Text>\r\n      <Text style={styles.boldText}>You are Here{text1}</Text>\r\n      <Text style={styles.boldText}>You are Here{text2}</Text>\r\n      <TouchableOpacity style={styles.button} onPress={handlePress}>\r\n        <Text style={styles.buttonText}>Back</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.btLogin1} onPress={sendLoc}>\r\n        <Text style={styles.buttonText1}>Send coordinates</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.btLogin1} onPress={goToMyLocation}>\r\n        <Text style={styles.buttonText1}>Center</Text>\r\n      </TouchableOpacity>\r\n      <MapView\r\n        style={styles.map}\r\n        provider={PROVIDER_GOOGLE}\r\n        ref={mapRef}\r\n      >\r\n\r\n      </MapView>  \r\n    </View>\r\n  )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 50,\r\n    padding: 16,\r\n  },\r\n  boldText: {\r\n    fontSize: 30,\r\n    color: 'red',\r\n  },\r\n  mapStyle: {\r\n    width: Dimensions.get('window').width,\r\n    height: Dimensions.get('window').height,\r\n  },\r\n  map: {\r\n    width: Dimensions.get('screen').width,\r\n    height: Dimensions.get('screen').height * 0.60,\r\n  }, \r\n  btLogin1: {\r\n    borderWidth: 1.5,\r\n    borderColor: \"#3675B8\",\r\n    height: 37,\r\n    marginHorizontal: 20,\r\n    backgroundColor: \"#3675B8\",\r\n    padding: 7,\r\n    borderRadius: 5,\r\n    marginTop: 12,\r\n    marginBottom: 12,\r\n    width: \"67%\",\r\n    alignItems: \"center\",\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}