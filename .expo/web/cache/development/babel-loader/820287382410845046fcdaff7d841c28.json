{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport * as Location from 'expo-location';\nimport MapView, { Marker } from 'react-native-maps';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Constants, Permissions } from 'expo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Perimiter(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  var handlePress = function handlePress() {\n    navigation.replace('Dashboard');\n  };\n\n  state = {\n    mapRegion: null,\n    hasLocationPermissions: false,\n    locationResult: null\n  };\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setLocation(location);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var text1 = 'Waiting..';\n  var text2 = 'Waiting..';\n\n  if (errorMsg) {\n    text1 = errorMsg;\n    text2 = errorMsg;\n  } else if (location) {\n    text1 = JSON.stringify(location.coords.latitude);\n    text2 = JSON.stringify(location.coords.longitude);\n  }\n\n  this.setState({\n    locationResult: JSON.stringify(location)\n  });\n  this.setState({\n    mapRegion: {\n      latitude: location.coords.latitude,\n      longitude: location.coords.longitude,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    }\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Perimiter\"\n    }), \"\\n\", _jsxs(Text, {\n      style: styles.boldText,\n      children: [\"You are Here\", text1]\n    }), \"\\n\", _jsxs(Text, {\n      style: styles.boldText,\n      children: [\"You are Here\", text2]\n    }), _jsx(MapView, {\n      style: {\n        alignSelf: 'stretch',\n        height: 400\n      },\n      region: this.state.mapRegion,\n      onRegionChange: this._handleMapRegionChange\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handlePress,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Back\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 50,\n    padding: 16\n  },\n  boldText: {\n    fontSize: 30,\n    color: 'red'\n  },\n  map: {\n    width: Dimensions.get('screen').width,\n    height: Dimensions.get('screen').height * 0.90\n  }\n});","map":{"version":3,"sources":["C:/Users/hendrik/Documents/mobiledev/mapareacalc/src/Perimiter.js"],"names":["React","useState","useEffect","TouchableOpacity","Location","MapView","Marker","FontAwesome","Constants","Permissions","Perimiter","navigation","location","setLocation","errorMsg","setErrorMsg","handlePress","replace","state","mapRegion","hasLocationPermissions","locationResult","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","text1","text2","JSON","stringify","coords","latitude","longitude","setState","latitudeDelta","longitudeDelta","styles","container","title","boldText","alignSelf","height","_handleMapRegionChange","button","buttonText","StyleSheet","create","flex","alignItems","justifyContent","marginTop","padding","fontSize","color","map","width","Dimensions","get"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport * as Location from 'expo-location';\r\nimport MapView, { Marker } from 'react-native-maps';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { Constants, Permissions } from 'expo';\r\n\r\n\r\n\r\nexport default function Perimiter({navigation}) {\r\n    const [location, setLocation] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n\r\n    const handlePress = () => {\r\n      navigation.replace('Dashboard');\r\n    };\r\n\r\n    state = {\r\n      mapRegion: null,\r\n      hasLocationPermissions: false,\r\n      locationResult: null\r\n    };\r\n    \r\n    useEffect(() => {\r\n      (async () => {\r\n        let { status } = await Location.requestForegroundPermissionsAsync();\r\n        if (status !== 'granted') {\r\n          setErrorMsg('Permission to access location was denied');\r\n          return;\r\n        }\r\n\r\n        let location = await Location.getCurrentPositionAsync({});\r\n        setLocation(location);\r\n\r\n      })();\r\n    }, []);\r\n  \r\n    let text1 = 'Waiting..';\r\n    let text2 = 'Waiting..';\r\n    if (errorMsg) {\r\n      text1 = errorMsg;\r\n      text2 = errorMsg;\r\n    } else if (location) {\r\n      text1 = JSON.stringify(location.coords.latitude);\r\n      text2 = JSON.stringify(location.coords.longitude);\r\n    }\r\n\r\n    \r\n    this.setState({ locationResult: JSON.stringify(location) });\r\n\r\n    this.setState({mapRegion: { latitude: location.coords.latitude, longitude: location.coords.longitude, latitudeDelta: 0.0922, longitudeDelta: 0.0421 }});\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>Perimiter</Text>\r\n        {`\\n`}\r\n        <Text style={styles.boldText}>You are Here{text1}</Text>\r\n        {`\\n`}\r\n        <Text style={styles.boldText}>You are Here{text2}</Text>\r\n          <MapView style={{ alignSelf: 'stretch', height: 400 }}\r\n                    region={this.state.mapRegion}\r\n                    onRegionChange={this._handleMapRegionChange}\r\n          />\r\n        <TouchableOpacity style={styles.button} onPress={handlePress}>\r\n          <Text style={styles.buttonText}>Back</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      \r\n    );\r\n    }\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 50,\r\n    padding: 16,\r\n  },\r\n  boldText: {\r\n    fontSize: 30,\r\n    color: 'red',\r\n  },\r\n  map: {\r\n    width: Dimensions.get('screen').width,\r\n    height: Dimensions.get('screen').height * 0.90,\r\n  }, \r\n});"]},"metadata":{},"sourceType":"module"}